print("Задание 1")

'''
Реализовать функцию, принимающую два числа
(позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя,
предусмотреть обработку ситуации деления на ноль.
'''

arg1 = float(input("Введите делимое: "))
arg2 = float(input("Введите делитель: "))


def divide(arg1, arg2):
    try:
        quotient = arg1 / arg2
    except ZeroDivisionError:
        return "На 0 делить нельзя"
    return quotient


print(f"Результат деления: {divide(arg1, arg2)}")

print("Задание 2")

'''
Выполнить функцию, которая принимает несколько параметров,
описывающих данные пользователя: имя, фамилия, год рождения,
город проживания, email, телефон. 
Функция должна принимать параметры как именованные аргументы. 
Осуществить вывод данных о пользователе одной строкой.
'''


def user_data(name, surname, birth_year, city, email, phone):
    print(f"Имя:  {name}, Фамилия: {surname}, "
          f"Год рождения: {birth_year}, Город проживания: {city}, "
          f"email: {email}, телефон: {phone}")


user_data(name=input("Введите имя: "),
          surname=input("Введите фамилию: "),
          city=input("Введите город проживания: "),
          email=input("Введите email: "),
          phone=input("Введите телефон: "),
          birth_year=input("Введите год рождения: "))

print("Задание 3")

'''
Реализовать функцию my_func(), которая принимает три позиционных аргумента
и возвращает сумму наибольших двух аргументов.
'''


def my_func(x, y, z):
    list = [x, y, z]
    max_1 = max(list)
    list.remove(max_1)
    max_2 = max(list)
    sum_max = max_1 + max_2
    return sum_max


print(my_func(float(input("Введите первое число: ")),
              float(input("Введите второе число: ")),
              float(input("Введите третье число: "))))

print("Задание 4")

'''
Программа принимает действительное положительное число x
и целое отрицательное число y. Необходимо выполнить возведение
числа x в степень y. Задание необходимо реализовать в виде функции
my_func(x, y). При решении задания необходимо обойтись без встроенной
функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. 
Первый — возведение в степень с помощью оператора **. 
Второй — более сложная реализация без оператора **,
 предусматривающая использование цикла.
'''


def my_func(x, y):
    return x ** y


print(my_func(int(input("Первое значение: ")),
              int(input("Второе значение: "))))


def my_func(x, y):
    res = 1
    for el in range(abs(y)):
        res *= x
    if y >= 0:
        return res
    else:
        return 1 / res


print(my_func(int(input("Первое значение: ")),
              int(input("Второе значение: "))))

print("Задание 5")

'''
Программа запрашивает у пользователя строку чисел, разделённых пробелом.
При нажатии Enter должна выводиться сумма чисел. 
Пользователь может продолжить ввод чисел, разделённых пробелом и 
снова нажать Enter. Сумма вновь введённых чисел будет добавляться к 
уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, 
выполнение программы завершается. Если специальный символ введён после 
нескольких чисел, то вначале нужно добавить сумму этих чисел к 
полученной ранее сумме и после этого завершить программу.
'''


def my_sum():
    sum_res = 0
    ex = False
    while ex == False:
        number = input("Введите числа через пробел "
                       "или Q для выхода - ").split()
        res = 0
        for el in range(len(number)):
            if number[el] == 'q' or number[el] == 'Q':
                ex = True
                break
            else:
                res = res + int(number[el])
        sum_res = sum_res + res
        print(f"Текущая сумма: {sum_res}")
    print(f"Итоговая сумма {sum_res}")


my_sum()

print("Задание 6")
print("Задание 7")

'''
Реализовать функцию int_func(), принимающую слова из маленьких латинских букв
и возвращающую их же, но с прописной первой буквой. 
Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, 
разделённых пробелом. Каждое слово состоит из латинских букв в нижнем регистре.
Нужно сделать вывод исходной строки, но каждое слово должно начинаться
с заглавной буквы. Используйте написанную ранее функцию int_func()
'''


def int_func(arg):
    return arg.title()


print(int_func(input("Введите слово: ")))


def int_func_new(arg):
    arg_title = []
    list_arg = arg.split()
    for el in list_arg:
        arg_title.append(int_func(el))
    print(*arg_title)


int_func_new(input("Введите слова через пробел: "))


